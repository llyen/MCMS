security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        in_memory:
            users:
                user:  { password: userpass, roles: [ 'ROLE_USER' ] }
                admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern:  ^/demo/secured/login$
            security: false

        secured_area:
            pattern:    ^/demo/secured/
            form_login:
                check_path: /demo/secured/login_check
                login_path: /demo/secured/login
            logout:
                path:   /demo/secured/logout
                target: /demo/
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"

    access_control:
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        #- { path: ^/_internal, roles: IS_AUTHENTICATED_ANONYMOUSLY, ip: 127.0.0.1 }

    encoders:
        Mcms\UserBundle\Entity\User:
            algorithm:  sha1
            encode_as_base64:   false
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> upstream/master
            iterations: 1

    providers:
        user:
            entity: { class: McmsUserBundle:User, property: username }

    firewalls:
        mainFirewall:
            pattern:    ^/
            anonymous:  ~
            form_login: ~
            logout: ~

    access_control:
        - { path: ^/admin, role: ROLE_ADMIN }
<<<<<<< HEAD
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
=======
            iterations: 1
>>>>>>> 554be3d2ef3a9b83c56ec8975e45d2c96a15b8f4
=======
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
>>>>>>> upstream/master
